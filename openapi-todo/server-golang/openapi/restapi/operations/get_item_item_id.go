// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetItemItemIDHandlerFunc turns a function with the right signature into a get item item Id handler
type GetItemItemIDHandlerFunc func(GetItemItemIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetItemItemIDHandlerFunc) Handle(params GetItemItemIDParams) middleware.Responder {
	return fn(params)
}

// GetItemItemIDHandler interface for that can handle valid get item item Id params
type GetItemItemIDHandler interface {
	Handle(GetItemItemIDParams) middleware.Responder
}

// NewGetItemItemID creates a new http.Handler for the get item item Id operation
func NewGetItemItemID(ctx *middleware.Context, handler GetItemItemIDHandler) *GetItemItemID {
	return &GetItemItemID{Context: ctx, Handler: handler}
}

/* GetItemItemID swagger:route GET /item/{itemId} getItemItemId

get item data

*/
type GetItemItemID struct {
	Context *middleware.Context
	Handler GetItemItemIDHandler
}

func (o *GetItemItemID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetItemItemIDParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
