// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/dai65527/pong-prototypes/openapi-todo/server-golang/openapi/models"
)

// GetItemItemIDOKCode is the HTTP code returned for type GetItemItemIDOK
const GetItemItemIDOKCode int = 200

/*GetItemItemIDOK OK

swagger:response getItemItemIdOK
*/
type GetItemItemIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Item `json:"body,omitempty"`
}

// NewGetItemItemIDOK creates GetItemItemIDOK with default headers values
func NewGetItemItemIDOK() *GetItemItemIDOK {

	return &GetItemItemIDOK{}
}

// WithPayload adds the payload to the get item item Id o k response
func (o *GetItemItemIDOK) WithPayload(payload *models.Item) *GetItemItemIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get item item Id o k response
func (o *GetItemItemIDOK) SetPayload(payload *models.Item) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetItemItemIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetItemItemIDBadRequestCode is the HTTP code returned for type GetItemItemIDBadRequest
const GetItemItemIDBadRequestCode int = 400

/*GetItemItemIDBadRequest Bad Request

swagger:response getItemItemIdBadRequest
*/
type GetItemItemIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetItemItemIDBadRequest creates GetItemItemIDBadRequest with default headers values
func NewGetItemItemIDBadRequest() *GetItemItemIDBadRequest {

	return &GetItemItemIDBadRequest{}
}

// WithPayload adds the payload to the get item item Id bad request response
func (o *GetItemItemIDBadRequest) WithPayload(payload *models.Error) *GetItemItemIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get item item Id bad request response
func (o *GetItemItemIDBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetItemItemIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetItemItemIDNotFoundCode is the HTTP code returned for type GetItemItemIDNotFound
const GetItemItemIDNotFoundCode int = 404

/*GetItemItemIDNotFound Not Found

swagger:response getItemItemIdNotFound
*/
type GetItemItemIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetItemItemIDNotFound creates GetItemItemIDNotFound with default headers values
func NewGetItemItemIDNotFound() *GetItemItemIDNotFound {

	return &GetItemItemIDNotFound{}
}

// WithPayload adds the payload to the get item item Id not found response
func (o *GetItemItemIDNotFound) WithPayload(payload *models.Error) *GetItemItemIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get item item Id not found response
func (o *GetItemItemIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetItemItemIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetItemItemIDInternalServerErrorCode is the HTTP code returned for type GetItemItemIDInternalServerError
const GetItemItemIDInternalServerErrorCode int = 500

/*GetItemItemIDInternalServerError Internal Server Error

swagger:response getItemItemIdInternalServerError
*/
type GetItemItemIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetItemItemIDInternalServerError creates GetItemItemIDInternalServerError with default headers values
func NewGetItemItemIDInternalServerError() *GetItemItemIDInternalServerError {

	return &GetItemItemIDInternalServerError{}
}

// WithPayload adds the payload to the get item item Id internal server error response
func (o *GetItemItemIDInternalServerError) WithPayload(payload *models.Error) *GetItemItemIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get item item Id internal server error response
func (o *GetItemItemIDInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetItemItemIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
