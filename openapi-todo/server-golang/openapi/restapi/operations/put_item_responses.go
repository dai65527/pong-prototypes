// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/dai65527/pong-prototypes/openapi-todo/server-golang/openapi/models"
)

// PutItemOKCode is the HTTP code returned for type PutItemOK
const PutItemOKCode int = 200

/*PutItemOK OK

swagger:response putItemOK
*/
type PutItemOK struct {

	/*
	  In: Body
	*/
	Payload *models.Item `json:"body,omitempty"`
}

// NewPutItemOK creates PutItemOK with default headers values
func NewPutItemOK() *PutItemOK {

	return &PutItemOK{}
}

// WithPayload adds the payload to the put item o k response
func (o *PutItemOK) WithPayload(payload *models.Item) *PutItemOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put item o k response
func (o *PutItemOK) SetPayload(payload *models.Item) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutItemOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutItemBadRequestCode is the HTTP code returned for type PutItemBadRequest
const PutItemBadRequestCode int = 400

/*PutItemBadRequest Bad Request

swagger:response putItemBadRequest
*/
type PutItemBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutItemBadRequest creates PutItemBadRequest with default headers values
func NewPutItemBadRequest() *PutItemBadRequest {

	return &PutItemBadRequest{}
}

// WithPayload adds the payload to the put item bad request response
func (o *PutItemBadRequest) WithPayload(payload *models.Error) *PutItemBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put item bad request response
func (o *PutItemBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutItemBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutItemNotFoundCode is the HTTP code returned for type PutItemNotFound
const PutItemNotFoundCode int = 404

/*PutItemNotFound Not Found

swagger:response putItemNotFound
*/
type PutItemNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutItemNotFound creates PutItemNotFound with default headers values
func NewPutItemNotFound() *PutItemNotFound {

	return &PutItemNotFound{}
}

// WithPayload adds the payload to the put item not found response
func (o *PutItemNotFound) WithPayload(payload *models.Error) *PutItemNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put item not found response
func (o *PutItemNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutItemNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutItemInternalServerErrorCode is the HTTP code returned for type PutItemInternalServerError
const PutItemInternalServerErrorCode int = 500

/*PutItemInternalServerError Internal Server Error

swagger:response putItemInternalServerError
*/
type PutItemInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutItemInternalServerError creates PutItemInternalServerError with default headers values
func NewPutItemInternalServerError() *PutItemInternalServerError {

	return &PutItemInternalServerError{}
}

// WithPayload adds the payload to the put item internal server error response
func (o *PutItemInternalServerError) WithPayload(payload *models.Error) *PutItemInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put item internal server error response
func (o *PutItemInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutItemInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
