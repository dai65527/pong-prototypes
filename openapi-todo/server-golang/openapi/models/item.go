// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"
	"encoding/json"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Item Item
//
// swagger:model Item
type Item struct {

	// comment
	Comment string `json:"comment,omitempty"`

	// created at
	CreatedAt int64 `json:"created_at,omitempty"`

	// done
	Done bool `json:"done,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// updated at
	UpdatedAt int64 `json:"updated_at,omitempty"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (m *Item) UnmarshalJSON(data []byte) error {
	var props struct {

		// comment
		Comment string `json:"comment,omitempty"`

		// created at
		CreatedAt int64 `json:"created_at,omitempty"`

		// done
		Done bool `json:"done,omitempty"`

		// id
		ID int64 `json:"id,omitempty"`

		// name
		Name string `json:"name,omitempty"`

		// updated at
		UpdatedAt int64 `json:"updated_at,omitempty"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	m.Comment = props.Comment
	m.CreatedAt = props.CreatedAt
	m.Done = props.Done
	m.ID = props.ID
	m.Name = props.Name
	m.UpdatedAt = props.UpdatedAt
	return nil
}

// Validate validates this item
func (m *Item) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this item based on context it is used
func (m *Item) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Item) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Item) UnmarshalBinary(b []byte) error {
	var res Item
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
